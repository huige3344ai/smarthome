<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd" >

	<context:annotation-config />
	
 	<!-- 数据库配置 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 数据库驱动 -->
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver">
		</property>
		<!-- 数据库url -->		
		<property name="url"
			value="jdbc:mysql://localhost:3306/smarthome">
		</property>
		<!-- 数据库用户名 -->		
		<property name="username" value="root"></property>
		<!-- 数据库密码-->			
		<property name="password" value="root"></property>
		<!-- 指定数据库的最大连接数 -->
		<property name="maxActive" value="100"/>
		<!-- 指定数据库的最大空闲连接数 -->
		<property name="maxIdle" value="30"/>
		<!-- 指定数据库的最大等待数 -->
		<property name="maxWait" value="1000"/>
		<!-- 指定数据库的默认自动提交 -->
		<property name="defaultAutoCommit" value="true"/>
		<!-- 指定数据库的连接超时时是否启动删除 -->
<!-- 		<property name="removeAbandoned" value="true"/> -->
		<!-- 指定数据库的删除数据库连接的超时时长 -->
<!-- 		<property name="removeAbandonedTimeout" value="60"/>
		<property name="logAbandoned" value="true"/> -->		
	</bean>

<!-- 	<aop:config proxy-target-class="true">
        <aop:aspect ref="audience">
            <aop:before pointcut="execution(* com.smarthome.base(..))"
            method="takeSeats"/>
            <aop:before pointcut="execution(*  com.smarthome.base(..))"
            method="turnOffCellPhones"/>
            <aop:after-returning pointcut="execution(*  com.smarthome.base(..))"
            method="applaud"/>
            <aop:after-throwing pointcut="execution(*  com.smarthome.base(..))"
            method="demandRefund"/>
        </aop:aspect>
    </aop:config> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		scope="prototype">
		<!-- 依赖注入SessionFactory所需的DataSource -->	
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- 下面指定Hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 下面指定Hibernate使用的数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
			</props>
		</property>			
		<!-- 加载所有的映射文件 -->
		<property name="mappingResources" >
			<list>


				<value>
					com/smarthome/simple/entity/Devices.hbm.xml
				</value>
				<value>
					com/smarthome/simple/entity/Health.hbm.xml
				</value>
				<value>com/smarthome/simple/entity/Home.hbm.xml</value>
				<value>
					com/smarthome/simple/entity/Memoradum.hbm.xml
				</value>
				<value>
					com/smarthome/simple/entity/Permission.hbm.xml
				</value>
				<value>
					com/smarthome/simple/entity/PermissionUser.hbm.xml
				</value>
				<value>
					com/smarthome/simple/entity/Restrecord.hbm.xml
				</value>
				<value>com/smarthome/simple/entity/Roles.hbm.xml</value>
				<value>com/smarthome/simple/entity/User.hbm.xml</value>
				
			</list>
		</property>	
	

	
	</bean>

	<!-- 为代理工厂bean注入事务管理器 -->	
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 定义代理的目标bean 此处的目标bean，必须是容器中真实存在的bean实例 -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	
	<!-- 全注解  在DAO上需加上@Transactional注解 -->
 	<tx:annotation-driven transaction-manager="txManager"/>   
	

	 	
	<!--BASEBEAN   -->
	<bean id="LoginInterceptor" class="com.smarthome.base.LoginInterceptor">
		<property name="userDao" ref="userDao"></property>	
	</bean>	
	<bean id="springUtils" class="com.smarthome.util.SpringUtils">
	</bean>

	<!--BASEBEAN END-->
	
	
	<!--QueryBean ENDING   -->
	<bean id="userQuery" class="com.smarthome.simple.query.UserQuery">
	</bean>
	<!-- QueryBean ENDING -->	


	
	<!-- 配置ACTION层-->
	<bean id="userAction" class="com.smarthome.simple.action.UserAction" scope="prototype">	
	</bean>
	<!-- ACTION E -->
	
	 <!-- 配置DAO层，必须提供DAO的实现类 -->	
	<bean id="userDao" class="com.smarthome.simple.dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="permissionDao" ref="permissionDao"></property>	
	</bean>
	<bean id="permissionDao" class="com.smarthome.simple.dao.impl.PermissionDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>	
	</bean>
	
	<!-- DAO层 ENDING -->
	
	
	<!-- 配置 SERVICE层 	-->
	<bean id="userService" class="com.smarthome.simple.services.impl.UserServiceImpl">
	</bean>
	<!-- SERVICE层 ENDING -->
		
	</beans>